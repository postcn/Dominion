<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\postcn\Documents\GitHub\Dominion\Dominion\Dominion\bin\Debug\Dominion.exe" total="101" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2013-04-14" time="23:22:31">
  <environment nunit-version="2.6.2.12296" clr-version="2.0.50727.5466" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="C:\Program Files\NUnit 2.6.2\bin" machine-name="POSTCN-1" user="postcn" user-domain="POSTCN-1" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\Users\postcn\Documents\GitHub\Dominion\Dominion\Dominion\bin\Debug\Dominion.exe" executed="True" result="Success" success="True" time="0.371" asserts="0">
    <results>
      <test-suite type="Namespace" name="Dominion" executed="True" result="Success" success="True" time="0.365" asserts="0">
        <results>
          <test-suite type="TestFixture" name="CardFunctionsTest" executed="True" result="Success" success="True" time="0.092" asserts="0">
            <results>
              <test-case name="Dominion.CardFunctionsTest.testAddActions" executed="True" result="Success" success="True" time="0.061" asserts="2" />
              <test-case name="Dominion.CardFunctionsTest.testAddBuys" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.CardFunctionsTest.testDraw" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.CardFunctionsTest.testGainCardRemodel" executed="True" result="Success" success="True" time="0.003" asserts="3" />
              <test-case name="Dominion.CardFunctionsTest.testGainCurses" executed="True" result="Success" success="True" time="0.008" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CardStackTest" executed="True" result="Success" success="True" time="0.026" asserts="0">
            <results>
              <test-case name="Dominion.CardStackTest.drawAll" executed="True" result="Success" success="True" time="0.008" asserts="6" />
              <test-case name="Dominion.CardStackTest.drawMoreThanAll" executed="True" result="Success" success="True" time="0.002" asserts="6" />
              <test-case name="Dominion.CardStackTest.testBuyOneCard" executed="True" result="Success" success="True" time="0.004" asserts="6" />
              <test-case name="Dominion.CardStackTest.testEmpty" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.CardStackTest.testGetCard" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.CardStackTest.testGetRemainingNoDraw" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.CardStackTest.testInitializes" executed="True" result="Success" success="True" time="0.000" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CardTest" executed="True" result="Success" success="True" time="0.028" asserts="0">
            <results>
              <test-case name="Dominion.CardTest.testEquals" executed="True" result="Success" success="True" time="0.002" asserts="11" />
              <test-case name="Dominion.CardTest.testFunctionNumber" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Dominion.CardTest.testGetActions" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Dominion.CardTest.testGetBuy" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.CardTest.testGetCash" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Dominion.CardTest.testGetCost" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.CardTest.testGetDescription" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.CardTest.testGetDraws" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.CardTest.testGetName" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Dominion.CardTest.testGetType" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.CardTest.testGetVictoryPoints" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Dominion.CardTest.testInintializes" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.CardTest.testToString" executed="True" result="Success" success="True" time="0.000" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="DeckTest" executed="True" result="Success" success="True" time="0.026" asserts="0">
            <results>
              <test-case name="Dominion.DeckTest.testDeckInitializes" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.DeckTest.testDiscardAll" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.DeckTest.testDiscardRandom" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="Dominion.DeckTest.testDraw" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.DeckTest.testDrawAll" executed="True" result="Success" success="True" time="0.002" asserts="1" />
              <test-case name="Dominion.DeckTest.testDrawAndDiscardAllAutomaticShuffle" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.DeckTest.testGetSize" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="Dominion.DeckTest.testShuffle" executed="True" result="Success" success="True" time="0.002" asserts="100" />
              <test-case name="Dominion.DeckTest.testSize" executed="True" result="Success" success="True" time="0.001" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="GameTest" executed="True" result="Success" success="True" time="0.033" asserts="0">
            <results>
              <test-case name="Dominion.GameTest.testCalculateVictorySupply" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Dominion.GameTest.testGetBuyablesDefaultCardsOnly" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Dominion.GameTest.testGetPlayer" executed="True" result="Success" success="True" time="0.001" asserts="7" />
              <test-case name="Dominion.GameTest.testGetPlayers" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Dominion.GameTest.testInitialization" executed="True" result="Success" success="True" time="0.000" asserts="4" />
              <test-case name="Dominion.GameTest.testNextTurnPlayerFourPlayer" executed="True" result="Success" success="True" time="0.000" asserts="4" />
              <test-case name="Dominion.GameTest.testNextTurnPlayerOnePlayer" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Dominion.GameTest.testNextTurnPlayerThreePlayer" executed="True" result="Success" success="True" time="0.000" asserts="4" />
              <test-case name="Dominion.GameTest.testNextTurnPlayerTwoPlayer" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.GameTest.testTurnFourPlayer" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="Dominion.GameTest.testTurnOnePlayer" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Dominion.GameTest.testTurnThreePlayer" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Dominion.GameTest.testTurnTwoPlayer" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.GameTest.testZeroPlayerTurn" executed="True" result="Success" success="True" time="0.001" asserts="4" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="HandTest" executed="True" result="Success" success="True" time="0.021" asserts="0">
            <results>
              <test-case name="Dominion.HandTest.testContains" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Dominion.HandTest.testDiscard" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Dominion.HandTest.testDraw" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.HandTest.testGetCurrency" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Dominion.HandTest.testInintializes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Dominion.HandTest.testRemoveCardNotInHand" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.HandTest.testSize" executed="True" result="Success" success="True" time="0.004" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PlayerTest" executed="True" result="Success" success="True" time="0.104" asserts="0">
            <results>
              <test-case name="Dominion.PlayerTest.testAddAndGetActions" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.PlayerTest.testAddAndGetBuys" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.PlayerTest.testAddBuys" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Dominion.PlayerTest.testAddBuysAndMultipleBuy" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.PlayerTest.testBuyAndVictory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Dominion.PlayerTest.testBuyFailureBecauseOfCurrency" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Dominion.PlayerTest.testCleanUp" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.PlayerTest.testEqualFailID" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testEqualFailNonPlayer" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testEqualFailStringName" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testEqualsPass" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="Dominion.PlayerTest.testFailBuyEmptyStack" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.PlayerTest.testFailMultipleBuys" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.PlayerTest.testFunctionFive" executed="True" result="Success" success="True" time="0.003" asserts="5" />
              <test-case name="Dominion.PlayerTest.testFunctionFour" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Dominion.PlayerTest.testFunctionSeven" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Dominion.PlayerTest.testFunctionSix" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Dominion.PlayerTest.testFunctionThree" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Dominion.PlayerTest.testFunctionTwo" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="Dominion.PlayerTest.testGainFailNoCardsInStack" executed="True" result="Success" success="True" time="0.003" asserts="5" />
              <test-case name="Dominion.PlayerTest.testGainFailNotEnoughMoney" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Dominion.PlayerTest.testGainFailNotGainInPlayer" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Dominion.PlayerTest.testGainFailNotInHand" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="Dominion.PlayerTest.testGainPass" executed="True" result="Success" success="True" time="0.001" asserts="8" />
              <test-case name="Dominion.PlayerTest.testGetActions" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testGetAndSetBonus" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.PlayerTest.testGetAndSetGain" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.PlayerTest.testGetCurrency" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.TestgetCurrencyValue" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testGetID" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="Dominion.PlayerTest.TestgetVictoryPts" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testPlayACardAndCleanup" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testPlayActionGoesIntoPlayed" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testPlayCardNotInHand" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="Dominion.PlayerTest.testPlayFuncOne" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testPlayNotAction" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="Dominion.PlayerTest.testPlayReducesActions" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.PlayerTest.testRemodelSequence" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Dominion.PlayerTest.testRemodelSequenceWorthMore" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="Dominion.PlayerTest.testSetAndGetName" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="Dominion.PlayerTest.TestsetVictoryPts" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="Dominion.PlayerTest.testTrashForGain" executed="True" result="Success" success="True" time="0.001" asserts="5" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="StatusObjectTest" executed="True" result="Success" success="True" time="0.008" asserts="0">
            <results>
              <test-case name="Dominion.StatusObjectTest.testGainedProperly" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.StatusObjectTest.testTrashedProperly" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.StatusObjectTest.testTrashForGain" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="Dominion.StatusObjectTest.testWasPlayed" executed="True" result="Success" success="True" time="0.000" asserts="2" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>