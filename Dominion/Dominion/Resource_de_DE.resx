<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bought" xml:space="preserve">
    <value> kaufte ein </value>
  </data>
  <data name="Bureaucrat" xml:space="preserve">
    <value>Bürokrat</value>
  </data>
  <data name="BureaucratDesc" xml:space="preserve">
    <value>Verschaffen Sie sich einen Silber-Karte;. \nput sie oben auf dein Deck \nJedes anderen Spieler deckt ein Victory-Karte \nvon seiner Hand und legt sie auf seinem Deck \n (oder zeigt eine Hand ohne Victory-Karten).</value>
  </data>
  <data name="BureaucratMsg1" xml:space="preserve">
    <value>setzen ein</value>
  </data>
  <data name="BureaucratMsg2" xml:space="preserve">
    <value>Zurück auf der Spitze ihrer Deck.</value>
  </data>
  <data name="Cellar" xml:space="preserve">
    <value>Keller</value>
  </data>
  <data name="CellarDesc" xml:space="preserve">
    <value>+1 Aktion \n Verwerfen beliebige Anzahl von Karten. \n +1 Karte pro Karte verworfen</value>
  </data>
  <data name="Chancellor" xml:space="preserve">
    <value>Bundeskanzlerin</value>
  </data>
  <data name="ChancellorDesc" xml:space="preserve">
    <value>+ 2 Währung \ nSie können sofort setzen Sie Ihre \n Deck in deinen Ablagestapel</value>
  </data>
  <data name="Chapel" xml:space="preserve">
    <value>Kapelle</value>
  </data>
  <data name="ChapelDesc" xml:space="preserve">
    <value>Trash bis zu 4 Karten von deiner Hand</value>
  </data>
  <data name="Copper" xml:space="preserve">
    <value>Kupfer</value>
  </data>
  <data name="CopperDesc" xml:space="preserve">
    <value>1 Währung wert</value>
  </data>
  <data name="CouncilRoom" xml:space="preserve">
    <value>Ratssaal</value>
  </data>
  <data name="CouncilRoomDesc" xml:space="preserve">
    <value>+4 Karten, +1 Buy zieht jeder andere Spieler eine Karte.</value>
  </data>
  <data name="Curse" xml:space="preserve">
    <value>Fluch</value>
  </data>
  <data name="CurseDesc" xml:space="preserve">
    <value>-1 Siegpunkt</value>
  </data>
  <data name="Defended" xml:space="preserve">
    <value>verteidigt gegen den Angriff!</value>
  </data>
  <data name="Duchy" xml:space="preserve">
    <value>Herzogtum</value>
  </data>
  <data name="DuchyDesc" xml:space="preserve">
    <value>3 Siegpunkte</value>
  </data>
  <data name="Estate" xml:space="preserve">
    <value>Immobilien</value>
  </data>
  <data name="EstateDesc" xml:space="preserve">
    <value>1 Siegpunkt</value>
  </data>
  <data name="Feast" xml:space="preserve">
    <value>Fest</value>
  </data>
  <data name="FeastDesc" xml:space="preserve">
    <value>Trash diese Karte und gewinnen Sie eine Karte kostet bis zu 5 Währung</value>
  </data>
  <data name="Festival" xml:space="preserve">
    <value>Festival</value>
  </data>
  <data name="FestivalDesc" xml:space="preserve">
    <value>+2 Aktionen \n +1 \n buy \n +2 Währung</value>
  </data>
  <data name="GainsLeft" xml:space="preserve">
    <value>Sie haben noch Gewinne übrig, Einstellung wieder zu gewinnen.</value>
  </data>
  <data name="Gardens" xml:space="preserve">
    <value>Gardens</value>
  </data>
  <data name="GardensDesc" xml:space="preserve">
    <value>1 Siegpunkt für je 10 Karten in deinem Deck (abgerundet).</value>
  </data>
  <data name="Gold" xml:space="preserve">
    <value>Gold</value>
  </data>
  <data name="GoldDesc" xml:space="preserve">
    <value>3 Währung wert</value>
  </data>
  <data name="Grats1" xml:space="preserve">
    <value>Herzlichen Glückwunsch, </value>
  </data>
  <data name="Grats2" xml:space="preserve">
    <value> zu gewinnen!</value>
  </data>
  <data name="IncorrectForMilitia" xml:space="preserve">
    <value>Falsche Anzahl von Karten für die Miliz abgeworfen</value>
  </data>
  <data name="Laboratory" xml:space="preserve">
    <value>Laboratory</value>
  </data>
  <data name="LaboratoryDesc" xml:space="preserve">
    <value>+2 Cards \n +1 Aktion</value>
  </data>
  <data name="Market" xml:space="preserve">
    <value>Markt</value>
  </data>
  <data name="MarketDesc" xml:space="preserve">
    <value>+1 Card \n +1 Aktion \n +1 Buy \n +1 Währung</value>
  </data>
  <data name="Militia" xml:space="preserve">
    <value>Militia</value>
  </data>
  <data name="MilitiaDesc" xml:space="preserve">
    <value>+2 Währung \nAlle anderen Spielern sofort verwerfen auf drei Karten.</value>
  </data>
  <data name="Mine" xml:space="preserve">
    <value>Bergwerk</value>
  </data>
  <data name="MineDesc" xml:space="preserve">
    <value>Trash einen Schatz Karte von deiner Hand \n Gewinnen eine Schatzkarte mit Kosten bis zu \n 3 Währung mehr, sondern setzen auf die Hand.</value>
  </data>
  <data name="MissingCards1" xml:space="preserve">
    <value>Vermissen Sie einen oder mehrere </value>
  </data>
  <data name="MissingCards2" xml:space="preserve">
    <value> von der Hand.</value>
  </data>
  <data name="Moat" xml:space="preserve">
    <value>Graben</value>
  </data>
  <data name="MoatDesc" xml:space="preserve">
    <value>+2 Karten\nWenn ein anderer Spieler einen Angriff Karte spielt, können Sie diese aus der Hand zu offenbaren. Wenn Sie das tun, sind Sie unabhängig von diesem Angriff.</value>
  </data>
  <data name="Moneylender" xml:space="preserve">
    <value>Geldverleiher</value>
  </data>
  <data name="MoneylenderDesc" xml:space="preserve">
    <value>Trash ein Kupfer aus deiner Hand. \n Wenn Sie tun +3 Währung</value>
  </data>
  <data name="MoreThanFour" xml:space="preserve">
    <value>Mehr als 4 Karten ausgewählt!</value>
  </data>
  <data name="NextTurn" xml:space="preserve">
    <value> Beendet ihrerseits. \n ======== \n</value>
  </data>
  <data name="NoGainsLeft" xml:space="preserve">
    <value>Keine Gewinne in Spieler übrig</value>
  </data>
  <data name="NotEnoughCur" xml:space="preserve">
    <value>Nicht genug Währung für Gewinn. </value>
  </data>
  <data name="NotGain" xml:space="preserve">
    <value>Nicht in Spieler zu gewinnen</value>
  </data>
  <data name="Played" xml:space="preserve">
    <value> spielte eine </value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>Provinz</value>
  </data>
  <data name="ProvinceDesc" xml:space="preserve">
    <value>6 Siegpunkte</value>
  </data>
  <data name="Remodel" xml:space="preserve">
    <value>renovieren</value>
  </data>
  <data name="RemodelDesc" xml:space="preserve">
    <value>Trash eine Karte aus deiner Hand. \n Verstärkung aa-Karte kostet bis zu 2 Währung \n mehr als die Papierkorb-Karte</value>
  </data>
  <data name="RevealNoVict" xml:space="preserve">
    <value>ergab eine Hand ohne Sieg Karten.</value>
  </data>
  <data name="Silver" xml:space="preserve">
    <value>Silber</value>
  </data>
  <data name="SilverDesc" xml:space="preserve">
    <value>2 Währung Wert</value>
  </data>
  <data name="Smithy" xml:space="preserve">
    <value>Schmiede</value>
  </data>
  <data name="SmithyDesc" xml:space="preserve">
    <value>+3 Karten</value>
  </data>
  <data name="Spy" xml:space="preserve">
    <value>Spitzel</value>
  </data>
  <data name="SpyDesc" xml:space="preserve">
    <value>+1 Karte\n+1 Aktion\nReveal die oberste Karte jedes Spielers Deck, und entscheiden, ob es bleibt oder wird verworfen.</value>
  </data>
  <data name="StackEmpty" xml:space="preserve">
    <value>Kartenstapel leer war</value>
  </data>
  <data name="TestString" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="Thief" xml:space="preserve">
    <value>Dieb</value>
  </data>
  <data name="ThiefDesc" xml:space="preserve">
    <value>Jeder andere Spieler deckt die obersten 2 Karten von seinem Deck\n Wenn sie irgendwelche Schatz Karten aufgedeckt, trash sie einer von ihnen, dass Sie sich entscheiden\nSie können gewinnen oder alle dieser Karten weggeworfen. Sie verwerfen die anderen aufgedeckten Karten.</value>
  </data>
  <data name="ThiefMsg1" xml:space="preserve">
    <value>ergab eine</value>
  </data>
  <data name="ThiefMsg2" xml:space="preserve">
    <value> von der Spitze ihrer Deck.</value>
  </data>
  <data name="ThroneRoom" xml:space="preserve">
    <value>Thronsaal</value>
  </data>
  <data name="ThroneRoomDesc" xml:space="preserve">
    <value>Wählen und Aktion Karte in Ihrer Hand. \n Play it zweimal</value>
  </data>
  <data name="Tie" xml:space="preserve">
    <value>Es war ein Unentschieden!</value>
  </data>
  <data name="TypeString0" xml:space="preserve">
    <value>Sieg</value>
  </data>
  <data name="TypeString1" xml:space="preserve">
    <value>Schatz</value>
  </data>
  <data name="TypeString2" xml:space="preserve">
    <value>Aktion</value>
  </data>
  <data name="TypeString3" xml:space="preserve">
    <value>Aktion - Angriff</value>
  </data>
  <data name="TypeString4" xml:space="preserve">
    <value>Aktion - Reaktion</value>
  </data>
  <data name="VictPts1" xml:space="preserve">
    <value> hatte </value>
  </data>
  <data name="VictPts2" xml:space="preserve">
    <value> Siegpunkte. \n</value>
  </data>
  <data name="Village" xml:space="preserve">
    <value>Dorf</value>
  </data>
  <data name="VillageDesc" xml:space="preserve">
    <value>+1 Card \n +2 Aktionen</value>
  </data>
  <data name="WasRemodel" xml:space="preserve">
    <value>War ein renovieren. Wird er auf die nächste Karte Papierkorb.</value>
  </data>
  <data name="Witch" xml:space="preserve">
    <value>Hexe</value>
  </data>
  <data name="WitchDesc" xml:space="preserve">
    <value>+2 Karten. \n Jeder Mitspieler bekommt einen Fluch Karte.</value>
  </data>
  <data name="Woodcutter" xml:space="preserve">
    <value>Holzfäller</value>
  </data>
  <data name="WoodcutterDesc" xml:space="preserve">
    <value>+1 Buy \ n +2 Währungen</value>
  </data>
  <data name="Workshop" xml:space="preserve">
    <value>Werkstatt</value>
  </data>
  <data name="WorkshopDesc" xml:space="preserve">
    <value>Nimm dir eine Karte mit Kosten bis zu 4 Währung</value>
  </data>
</root>